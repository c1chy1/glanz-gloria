var serviceWorkerOption = {"assets":["/img/services_header.a42ab344.jpg","/fonts/helvetica-regular.15d97d6d.woff2","/fonts/AmsiPro-Regular.bb8f9b67.woff2","/fonts/manrope.light.a6f91746.woff2","/fonts/Lato-Italic.5a8b71b5.woff2","/img/home_header.7d6991b8.jpg","/img/about_img.0e2ec85f.jpg","/img/logo_final.6590ebe5.png","/img/ueber_header.bc0a7d50.jpg","/img/ueber_img.3ebb9be3.jpg","/img/contact_header.e1a1eddc.jpg","/img/Google_map.ed0b3eb8.png","/css/about.2c2741c9.css","/js/about.2813cab9.js","/css/app.a9258824.css","/js/app.c630cb56.js","/css/chunk-vendors.61dcfff8.css","/js/chunk-vendors.d2a45b9c.js","/css/contact.75f83177.css","/js/contact.88a9d896.js","/js/datenschutz.2ead1a41.js","/js/impressum.1bdfd25d.js","/css/services.f643be3f.css","/js/services.5aaee678.js","/index.html","/manifest.json","/img/icons/apple-touch-icon-152x152.png","/img/icons/favicon-16x16.png","/img/icons/favicon-32x32.png","/pwa/logo_192x192.webp","/pwa/logo_512x512.webp","/robots.txt","/favicon.ico","/pwa/logo_192x192.png","/pwa/logo_512x512.png","/precache-manifest.d53902c42fc4d11d5da4b2793887386f.js","/service-worker.js","/css/about.2c2741c9.css.br","/sw.js.br","/js/about.2813cab9.js.br","/css/chunk-vendors.61dcfff8.css.br","/js/chunk-vendors.d2a45b9c.js.br","/css/contact.75f83177.css.br","/js/datenschutz.2ead1a41.js.br","/js/impressum.1bdfd25d.js.br","/js/contact.88a9d896.js.br","/js/services.5aaee678.js.br","/manifest.json.br","/index.html.br","/precache-manifest.d53902c42fc4d11d5da4b2793887386f.js.br","/service-worker.js.br","/css/app.a9258824.css.br","/js/app.c630cb56.js.br","/sw.js.gz","/js/about.2813cab9.js.gz","/css/contact.75f83177.css.gz","/css/chunk-vendors.61dcfff8.css.gz","/js/chunk-vendors.d2a45b9c.js.gz","/js/datenschutz.2ead1a41.js.gz","/js/contact.88a9d896.js.gz","/js/impressum.1bdfd25d.js.gz","/js/services.5aaee678.js.gz","/manifest.json.gz","/index.html.gz","/service-worker.js.gz","/precache-manifest.d53902c42fc4d11d5da4b2793887386f.js.gz","/css/app.a9258824.css.gz","/js/app.c630cb56.js.gz","/img/icons/favicon-16x16.webp","/img/icons/apple-touch-icon-152x152.webp","/img/icons/favicon-32x32.webp","/img/about_img.0e2ec85f.webp","/img/Google_map.ed0b3eb8.webp","/img/contact_header.e1a1eddc.webp","/img/ueber_img.3ebb9be3.webp","/img/home_header.7d6991b8.webp","/img/services_header.a42ab344.webp","/img/logo_final.6590ebe5.webp","/img/ueber_header.bc0a7d50.webp"]};
        
        (function(e){var t={};function s(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,s),r.l=!0,r.exports}s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)s.d(n,r,function(t){return e[t]}.bind(null,r));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="/",s(s.s="4314")})({4314:function(e,t,s){"use strict";s.r(t);try{self["workbox:core:4.3.1"]&&_()}catch(pe){}const n=(e,...t)=>{let s=e;return t.length>0&&(s+=" :: "+JSON.stringify(t)),s},r=n;class a extends Error{constructor(e,t){let s=r(e,t);super(s),this.name=e,this.details=t}}try{self["workbox:routing:4.3.1"]&&_()}catch(pe){}const i="GET",o=e=>e&&"object"===typeof e?e:{handle:e};class c{constructor(e,t,s){this.handler=o(t),this.match=e,this.method=s||i}}class h extends c{constructor(e,t,s){const n=({url:t})=>{const s=e.exec(t.href);return s?t.origin!==location.origin&&0!==s.index?null:s.slice(1):null};super(n,t,s)}}const u={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:self.registration.scope},l=e=>[u.prefix,e,u.suffix].filter(e=>e.length>0).join("-"),p={updateDetails:e=>{Object.keys(u).forEach(t=>{"undefined"!==typeof e[t]&&(u[t]=e[t])})},getGoogleAnalyticsName:e=>e||l(u.googleAnalytics),getPrecacheName:e=>e||l(u.precache),getPrefix:()=>u.prefix,getRuntimeName:e=>e||l(u.runtime),getSuffix:()=>u.suffix},d=e=>{const t=new URL(e,location);return t.origin===location.origin?t.pathname:t.href};class m{constructor(){this._routes=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",async e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data;0;const s=Promise.all(t.urlsToCache.map(e=>{"string"===typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&(await s,e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location);if(!s.protocol.startsWith("http"))return void 0;let n,{params:r,route:a}=this.findMatchingRoute({url:s,request:e,event:t}),i=a&&a.handler;if(!i&&this._defaultHandler&&(i=this._defaultHandler),i){try{n=i.handle({url:s,request:e,event:t,params:r})}catch(o){n=Promise.reject(o)}return n&&this._catchHandler&&(n=n.catch(e=>this._catchHandler.handle({url:s,event:t,err:e}))),n}}findMatchingRoute({url:e,request:t,event:s}){const n=this._routes.get(t.method)||[];for(const r of n){let n,a=r.match({url:e,request:t,event:s});if(a)return(Array.isArray(a)&&a.length>0||a.constructor===Object&&Object.keys(a).length>0)&&(n=a),{route:r,params:n}}return{}}setDefaultHandler(e){this._defaultHandler=o(e)}setCatchHandler(e){this._catchHandler=o(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new a("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(!(t>-1))throw new a("unregister-route-route-not-registered");this._routes.get(e.method).splice(t,1)}}let g;const f=()=>(g||(g=new m,g.addFetchListener(),g.addCacheListener()),g),w=(e,t,s="GET")=>{let n;if("string"===typeof e){const r=new URL(e,location);0;const a=({url:e})=>e.href===r.href;n=new c(a,t,s)}else if(e instanceof RegExp)n=new h(e,t,s);else if("function"===typeof e)n=new c(e,t,s);else{if(!(e instanceof c))throw new a("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});n=e}const r=f();return r.registerRoute(n),n};const y=new Set;async function q(){for(const e of y)await e()}const v={CACHE_DID_UPDATE:"cacheDidUpdate",CACHE_KEY_WILL_BE_USED:"cacheKeyWillBeUsed",CACHE_WILL_UPDATE:"cacheWillUpdate",CACHED_RESPONSE_WILL_BE_USED:"cachedResponseWillBeUsed",FETCH_DID_FAIL:"fetchDidFail",FETCH_DID_SUCCEED:"fetchDidSucceed",REQUEST_WILL_FETCH:"requestWillFetch"},E={filter:(e,t)=>e.filter(e=>t in e)},R=async({cacheName:e,request:t,response:s,event:n,plugins:r=[],matchOptions:i}={})=>{const o=await C({plugins:r,request:t,mode:"write"});if(!s)throw new a("cache-put-with-no-response",{url:d(o.url)});let c=await N({event:n,plugins:r,response:s,request:o});if(!c)return void 0;const h=await caches.open(e),u=E.filter(r,v.CACHE_DID_UPDATE);let l=u.length>0?await x({cacheName:e,matchOptions:i,request:o}):null;try{await h.put(o,c)}catch(p){throw"QuotaExceededError"===p.name&&await q(),p}for(let a of u)await a[v.CACHE_DID_UPDATE].call(a,{cacheName:e,event:n,oldResponse:l,newResponse:c,request:o})},x=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:r=[]})=>{const a=await caches.open(e),i=await C({plugins:r,request:t,mode:"read"});let o=await a.match(i,n);for(const c of r)v.CACHED_RESPONSE_WILL_BE_USED in c&&(o=await c[v.CACHED_RESPONSE_WILL_BE_USED].call(c,{cacheName:e,event:s,matchOptions:n,cachedResponse:o,request:i}));return o},N=async({request:e,response:t,event:s,plugins:n})=>{let r=t,a=!1;for(let i of n)if(v.CACHE_WILL_UPDATE in i&&(a=!0,r=await i[v.CACHE_WILL_UPDATE].call(i,{request:e,response:r,event:s}),!r))break;return a||(r=200===r.status?r:null),r||null},C=async({request:e,mode:t,plugins:s})=>{const n=E.filter(s,v.CACHE_KEY_WILL_BE_USED);let r=e;for(const a of n)r=await a[v.CACHE_KEY_WILL_BE_USED].call(a,{mode:t,request:r}),"string"===typeof r&&(r=new Request(r));return r},U={put:R,match:x},L=async({request:e,fetchOptions:t,event:s,plugins:n=[]})=>{if(s&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}"string"===typeof e&&(e=new Request(e));const r=E.filter(n,v.FETCH_DID_FAIL),i=r.length>0?e.clone():null;try{for(let t of n)v.REQUEST_WILL_FETCH in t&&(e=await t[v.REQUEST_WILL_FETCH].call(t,{request:e.clone(),event:s}))}catch(c){throw new a("plugin-error-request-will-fetch",{thrownError:c})}let o=e.clone();try{let r;r="navigate"===e.mode?await fetch(e):await fetch(e,t);for(const e of n)v.FETCH_DID_SUCCEED in e&&(r=await e[v.FETCH_DID_SUCCEED].call(e,{event:s,request:o,response:r}));return r}catch(h){0;for(const e of r)await e[v.FETCH_DID_FAIL].call(e,{error:h,event:s,originalRequest:i.clone(),request:o.clone()});throw h}},O={fetch:L};try{self["workbox:strategies:4.3.1"]&&_()}catch(pe){}class T{constructor(e={}){this._cacheName=p.getRuntimeName(e.cacheName),this._plugins=e.plugins||[],this._fetchOptions=e.fetchOptions||null,this._matchOptions=e.matchOptions||null}async handle({event:e,request:t}){return this.makeRequest({event:e,request:t||e.request})}async makeRequest({event:e,request:t}){"string"===typeof t&&(t=new Request(t));let s,n=await U.match({cacheName:this._cacheName,request:t,event:e,matchOptions:this._matchOptions,plugins:this._plugins});if(n)0;else{0;try{n=await this._getFromNetwork(t,e)}catch(r){s=r}0}if(!n)throw new a("no-response",{url:t.url,error:s});return n}async _getFromNetwork(e,t){const s=await O.fetch({request:e,event:t,fetchOptions:this._fetchOptions,plugins:this._plugins}),n=s.clone(),r=U.put({cacheName:this._cacheName,request:e,response:n,event:t,plugins:this._plugins});if(t)try{t.waitUntil(r)}catch(a){0}return s}}class b{constructor(e={}){this._cacheName=p.getRuntimeName(e.cacheName),this._plugins=e.plugins||[],this._matchOptions=e.matchOptions||null}async handle({event:e,request:t}){return this.makeRequest({event:e,request:t||e.request})}async makeRequest({event:e,request:t}){"string"===typeof t&&(t=new Request(t));const s=await U.match({cacheName:this._cacheName,request:t,event:e,matchOptions:this._matchOptions,plugins:this._plugins});if(!s)throw new a("no-response",{url:t.url});return s}}const D={cacheWillUpdate:({response:e})=>200===e.status||0===e.status?e:null};class S{constructor(e={}){if(this._cacheName=p.getRuntimeName(e.cacheName),e.plugins){let t=e.plugins.some(e=>!!e.cacheWillUpdate);this._plugins=t?e.plugins:[D,...e.plugins]}else this._plugins=[D];this._networkTimeoutSeconds=e.networkTimeoutSeconds,this._fetchOptions=e.fetchOptions||null,this._matchOptions=e.matchOptions||null}async handle({event:e,request:t}){return this.makeRequest({event:e,request:t||e.request})}async makeRequest({event:e,request:t}){const s=[];"string"===typeof t&&(t=new Request(t));const n=[];let r;if(this._networkTimeoutSeconds){const{id:a,promise:i}=this._getTimeoutPromise({request:t,event:e,logs:s});r=a,n.push(i)}const i=this._getNetworkPromise({timeoutId:r,request:t,event:e,logs:s});n.push(i);let o=await Promise.race(n);if(o||(o=await i),!o)throw new a("no-response",{url:t.url});return o}_getTimeoutPromise({request:e,logs:t,event:s}){let n;const r=new Promise(t=>{const r=async()=>{t(await this._respondFromCache({request:e,event:s}))};n=setTimeout(r,1e3*this._networkTimeoutSeconds)});return{promise:r,id:n}}async _getNetworkPromise({timeoutId:e,request:t,logs:s,event:n}){let r,a;try{a=await O.fetch({request:t,event:n,fetchOptions:this._fetchOptions,plugins:this._plugins})}catch(i){r=i}if(e&&clearTimeout(e),r||!a)a=await this._respondFromCache({request:t,event:n});else{const e=a.clone(),s=U.put({cacheName:this._cacheName,request:t,response:e,event:n,plugins:this._plugins});if(n)try{n.waitUntil(s)}catch(i){0}}return a}_respondFromCache({event:e,request:t}){return U.match({cacheName:this._cacheName,request:t,event:e,matchOptions:this._matchOptions,plugins:this._plugins})}}class A{constructor(e={}){this._cacheName=p.getRuntimeName(e.cacheName),this._plugins=e.plugins||[],this._fetchOptions=e.fetchOptions||null}async handle({event:e,request:t}){return this.makeRequest({event:e,request:t||e.request})}async makeRequest({event:e,request:t}){let s,n;"string"===typeof t&&(t=new Request(t));try{n=await O.fetch({request:t,event:e,fetchOptions:this._fetchOptions,plugins:this._plugins})}catch(r){s=r}if(!n)throw new a("no-response",{url:t.url,error:s});return n}}class k{constructor(e={}){if(this._cacheName=p.getRuntimeName(e.cacheName),this._plugins=e.plugins||[],e.plugins){let t=e.plugins.some(e=>!!e.cacheWillUpdate);this._plugins=t?e.plugins:[D,...e.plugins]}else this._plugins=[D];this._fetchOptions=e.fetchOptions||null,this._matchOptions=e.matchOptions||null}async handle({event:e,request:t}){return this.makeRequest({event:e,request:t||e.request})}async makeRequest({event:e,request:t}){"string"===typeof t&&(t=new Request(t));const s=this._getFromNetwork({request:t,event:e});let n,r=await U.match({cacheName:this._cacheName,request:t,event:e,matchOptions:this._matchOptions,plugins:this._plugins});if(r){if(e)try{e.waitUntil(s)}catch(n){0}}else{0;try{r=await s}catch(i){n=i}}if(!r)throw new a("no-response",{url:t.url,error:n});return r}async _getFromNetwork({request:e,event:t}){const s=await O.fetch({request:e,event:t,fetchOptions:this._fetchOptions,plugins:this._plugins}),n=U.put({cacheName:this._cacheName,request:e,response:s.clone(),event:t,plugins:this._plugins});if(t)try{t.waitUntil(n)}catch(r){0}return s}}const P={cacheFirst:T,cacheOnly:b,networkFirst:S,networkOnly:A,staleWhileRevalidate:k},I=e=>{const t=P[e];return e=>new t(e)};I("cacheFirst"),I("cacheOnly"),I("networkFirst"),I("networkOnly"),I("staleWhileRevalidate");class H{constructor(e,t,{onupgradeneeded:s,onversionchange:n=this._onversionchange}={}){this._name=e,this._version=t,this._onupgradeneeded=s,this._onversionchange=n,this._db=null}get db(){return this._db}async open(){if(!this._db)return this._db=await new Promise((e,t)=>{let s=!1;setTimeout(()=>{s=!0,t(new Error("The open request was blocked and timed out"))},this.OPEN_TIMEOUT);const n=indexedDB.open(this._name,this._version);n.onerror=()=>t(n.error),n.onupgradeneeded=e=>{s?(n.transaction.abort(),e.target.result.close()):this._onupgradeneeded&&this._onupgradeneeded(e)},n.onsuccess=({target:t})=>{const n=t.result;s?n.close():(n.onversionchange=this._onversionchange.bind(this),e(n))}}),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,s){return await this.getAllMatching(e,{query:t,count:s})}async getAllKeys(e,t,s){return(await this.getAllMatching(e,{query:t,count:s,includeKeys:!0})).map(({key:e})=>e)}async getAllMatching(e,{index:t,query:s=null,direction:n="next",count:r,includeKeys:a}={}){return await this.transaction([e],"readonly",(i,o)=>{const c=i.objectStore(e),h=t?c.index(t):c,u=[];h.openCursor(s,n).onsuccess=({target:e})=>{const t=e.result;if(t){const{primaryKey:e,key:s,value:n}=t;u.push(a?{primaryKey:e,key:s,value:n}:n),r&&u.length>=r?o(u):t.continue()}else o(u)}})}async transaction(e,t,s){return await this.open(),await new Promise((n,r)=>{const a=this._db.transaction(e,t);a.onabort=({target:e})=>r(e.error),a.oncomplete=()=>n(),s(a,e=>n(e))})}async _call(e,t,s,...n){const r=(s,r)=>{s.objectStore(t)[e](...n).onsuccess=({target:e})=>{r(e.result)}};return await this.transaction([t],s,r)}_onversionchange(){this.close()}close(){this._db&&(this._db.close(),this._db=null)}}H.prototype.OPEN_TIMEOUT=2e3;const W={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[_,de]of Object.entries(W))for(const e of de)e in IDBObjectStore.prototype&&(H.prototype[e]=async function(t,...s){return await this._call(e,t,_,...s)});const F=async e=>{await new Promise((t,s)=>{const n=indexedDB.deleteDatabase(e);n.onerror=({target:e})=>{s(e.error)},n.onblocked=()=>{s(new Error("Delete blocked"))},n.onsuccess=()=>{t()}})};try{self["workbox:expiration:4.3.1"]&&_()}catch(pe){}const K="workbox-expiration",M="cache-entries",j=e=>{const t=new URL(e,location);return t.hash="",t.href};class B{constructor(e){this._cacheName=e,this._db=new H(K,1,{onupgradeneeded:e=>this._handleUpgrade(e)})}_handleUpgrade(e){const t=e.target.result,s=t.createObjectStore(M,{keyPath:"id"});s.createIndex("cacheName","cacheName",{unique:!1}),s.createIndex("timestamp","timestamp",{unique:!1}),F(this._cacheName)}async setTimestamp(e,t){e=j(e),await this._db.put(M,{url:e,timestamp:t,cacheName:this._cacheName,id:this._getId(e)})}async getTimestamp(e){const t=await this._db.get(M,this._getId(e));return t.timestamp}async expireEntries(e,t){const s=await this._db.transaction(M,"readwrite",(s,n)=>{const r=s.objectStore(M),a=[];let i=0;r.index("timestamp").openCursor(null,"prev").onsuccess=({target:s})=>{const r=s.result;if(r){const s=r.value;s.cacheName===this._cacheName&&(e&&s.timestamp<e||t&&i>=t?a.push(r.value):i++),r.continue()}else n(a)}}),n=[];for(const r of s)await this._db.delete(M,r.id),n.push(r.url);return n}_getId(e){return this._cacheName+"|"+j(e)}}class Q{constructor(e,t={}){this._isRunning=!1,this._rerunRequested=!1,this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._cacheName=e,this._timestampModel=new B(e)}async expireEntries(){if(this._isRunning)return void(this._rerunRequested=!0);this._isRunning=!0;const e=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:void 0,t=await this._timestampModel.expireEntries(e,this._maxEntries),s=await caches.open(this._cacheName);for(const n of t)await s.delete(n);this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,this.expireEntries())}async updateTimestamp(e){await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){const t=await this._timestampModel.getTimestamp(e),s=Date.now()-1e3*this._maxAgeSeconds;return t<s}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}function G(e){y.add(e)}class Y{constructor(e={}){this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError&&G(()=>this.deleteCacheAndMetadata())}_getCacheExpiration(e){if(e===p.getRuntimeName())throw new a("expire-custom-caches-only");let t=this._cacheExpirations.get(e);return t||(t=new Q(e,this._config),this._cacheExpirations.set(e,t)),t}cachedResponseWillBeUsed({event:e,request:t,cacheName:s,cachedResponse:n}){if(!n)return null;let r=this._isResponseDateFresh(n);const a=this._getCacheExpiration(s);a.expireEntries();const i=a.updateTimestamp(t.url);if(e)try{e.waitUntil(i)}catch(o){0}return r?n:null}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0;const t=this._getDateHeaderTimestamp(e);if(null===t)return!0;const s=Date.now();return t>=s-1e3*this._maxAgeSeconds}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t),n=s.getTime();return isNaN(n)?null:n}async cacheDidUpdate({cacheName:e,request:t}){const s=this._getCacheExpiration(e);await s.updateTimestamp(t.url),await s.expireEntries()}async deleteCacheAndMetadata(){for(const[e,t]of this._cacheExpirations)await caches.delete(e),await t.delete();this._cacheExpirations=new Map}}try{self["workbox:precaching:4.3.1"]&&_()}catch(pe){}const J=[],V={get(){return J},add(e){J.push(...e)}};async function $(e){const t=e.clone(),s="body"in t?Promise.resolve(t.body):t.blob(),n=await s;return new Response(n,{headers:t.headers,status:t.status,statusText:t.statusText})}const z="__WB_REVISION__";function X(e){if(!e)throw new a("add-to-cache-list-unexpected-type",{entry:e});if("string"===typeof e){const t=new URL(e,location);return{cacheKey:t.href,url:t.href}}const{revision:t,url:s}=e;if(!s)throw new a("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(s,location);return{cacheKey:e.href,url:e.href}}const n=new URL(s,location),r=new URL(s,location);return r.searchParams.set(z,t),{cacheKey:r.href,url:n.href}}class Z{constructor(e){this._cacheName=p.getPrecacheName(e),this._urlsToCacheKeys=new Map}addToCacheList(e){for(const t of e){const{cacheKey:e,url:s}=X(t);if(this._urlsToCacheKeys.has(s)&&this._urlsToCacheKeys.get(s)!==e)throw new a("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(s),secondEntry:e});this._urlsToCacheKeys.set(s,e)}}async install({event:e,plugins:t}={}){const s=[],n=[],r=await caches.open(this._cacheName),a=await r.keys(),i=new Set(a.map(e=>e.url));for(const c of this._urlsToCacheKeys.values())i.has(c)?n.push(c):s.push(c);const o=s.map(s=>this._addURLToCache({event:e,plugins:t,url:s}));return await Promise.all(o),{updatedURLs:s,notUpdatedURLs:n}}async activate(){const e=await caches.open(this._cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),n=[];for(const r of t)s.has(r.url)||(await e.delete(r),n.push(r.url));return{deletedURLs:n}}async _addURLToCache({url:e,event:t,plugins:s}){const n=new Request(e,{credentials:"same-origin"});let r,i=await O.fetch({event:t,plugins:s,request:n});for(const a of s||[])"cacheWillUpdate"in a&&(r=a.cacheWillUpdate.bind(a));const o=r?r({event:t,request:n,response:i}):i.status<400;if(!o)throw new a("bad-precaching-response",{url:e,status:i.status});i.redirected&&(i=await $(i)),await U.put({event:t,plugins:s,request:n,response:i,cacheName:this._cacheName,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location);return this._urlsToCacheKeys.get(t.href)}}let ee;const te=()=>(ee||(ee=new Z),ee);function se(e,t){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}function*ne(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:n,urlManipulation:r}={}){const a=new URL(e,location);a.hash="",yield a.href;const i=se(a,t);if(yield i.href,s&&i.pathname.endsWith("/")){const e=new URL(i);e.pathname+=s,yield e.href}if(n){const e=new URL(i);e.pathname+=".html",yield e.href}if(r){const e=r({url:a});for(const t of e)yield t.href}}const re=(e,t)=>{const s=te(),n=s.getURLsToCacheKeys();for(const r of ne(e,t)){const e=n.get(r);if(e)return e}},ae=({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n=null}={})=>{const r=p.getPrecacheName();addEventListener("fetch",a=>{const i=re(a.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:n});if(!i)return void 0;let o=caches.open(r).then(e=>e.match(i)).then(e=>e||fetch(i));a.respondWith(o)})};let ie=!1;const oe=e=>{ie||(ae(e),ie=!0)},ce=e=>{const t=te(),s=V.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},he=e=>{const t=te(),s=V.get();e.waitUntil(t.activate({event:e,plugins:s}))},ue=e=>{const t=te();t.addToCacheList(e),e.length>0&&(addEventListener("install",ce),addEventListener("activate",he))},le=(e,t)=>{ue(e),oe(t)};console.log("Hello world from our SW!"),le(self.serviceWorkerOption.assets),w(/\.(?:png|gif|jpg|jpeg|svg|webp|)$/,new k({cacheName:"images",plugins:[new Y({maxEntries:60,maxAgeSeconds:2592e3})]}))}});
//# sourceMappingURL=sw.js.map